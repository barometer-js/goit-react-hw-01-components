{"version":3,"sources":["components/Profile/Profile.module.scss","components/FriendList/FriendList.module.scss","components/Statistics/Statistics.module.scss","components/TransactionHistory/TransactionHistory.module.scss","components/Profile/Profile.js","components/helpers/onRandomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","username","tag","location","avatar","followers","views","likes","className","s","container","section","src","alt","width","name","tager","list","item","rating","grade","onRandomColor","r","Math","floor","random","g","b","Statistics","title","stats","map","stat","style","backgroundColor","label","percentage","id","FriendListItem","isOnline","statusOnline","statusOffline","FriendList","friends","friend","TransactionHistory","items","titleItem","tableList","line","type","amount","currency","App","user","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f5f8626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__1ODjS\",\"section\":\"Profile_section__E6_al\",\"avatar\":\"Profile_avatar__3w0-V\",\"name\":\"Profile_name__oCYLR\",\"tager\":\"Profile_tager__34hQ-\",\"location\":\"Profile_location__1vtKv\",\"list\":\"Profile_list__2hR8x\",\"item\":\"Profile_item__1uVfV\",\"rating\":\"Profile_rating__38pZY\",\"grade\":\"Profile_grade__LMM0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__2YZ4Z\",\"item\":\"FriendList_item__3mbWU\",\"statusOnline\":\"FriendList_statusOnline__2UuFh\",\"statusOffline\":\"FriendList_statusOffline__njBt7\",\"avatar\":\"FriendList_avatar__3fxo-\",\"name\":\"FriendList_name__2ESvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Statistics_section__2lKjM\",\"title\":\"Statistics_title__3fnMh\",\"list\":\"Statistics_list__1yrm6\",\"item\":\"Statistics_item__2TkeV\",\"label\":\"Statistics_label__1yW2c\",\"percentage\":\"Statistics_percentage__htm4R Statistics_label__1yW2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"TransactionHistory_section__1TbHv\",\"titleItem\":\"TransactionHistory_titleItem__NTQaf\",\"line\":\"TransactionHistory_line__1GXJl\",\"item\":\"TransactionHistory_item__2M1jZ\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.scss';\n\nfunction Profile({ username, tag, location, avatar, followers, views, likes }) {\n  return (\n    <div className={s.container}>\n      <div className={s.section}>\n        <img src={avatar} alt={username} className={s.avatar} width=\"200px\" />\n        <p className={s.name}>{username}</p>\n        <p className={s.tager}>{`@${tag}`}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.list}>\n        <li className={s.item}>\n          <span className={s.rating}>Followers</span>\n          <span className={s.grade}>{followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.rating}>Views</span>\n          <span className={s.grade}>{views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.rating}>Likes</span>\n          <span className={s.grade}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","function onRandomColor() {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  return `rgb(${r},${g},${b})`;\n}\n\nexport default onRandomColor;\n","import PropTypes from 'prop-types';\nimport onRandomColor from '../helpers/onRandomColor';\nimport s from './Statistics.module.scss';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.list}>\n        {stats.map(stat => (\n          <li\n            className={s.item}\n            key={stat.id}\n            style={{ backgroundColor: onRandomColor() }}\n          >\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.scss';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className={s.item}>\n      <span className={isOnline ? s.statusOnline : s.statusOffline}>\n        {isOnline}\n      </span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.scss';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.list}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.array.isRequired,\n};\n\nexport default FriendList;\n","import s from './TransactionHistory.module.scss';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.section}>\n      <thead>\n        <tr className={s.titleItem}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={s.tableList}>\n        {items.map(item => (\n          <tr key={item.id} className={s.line}>\n            <td className={s.item}>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionHistory;\n","import { Fragment } from 'react';\nimport 'normalize.css';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport data from './components/Statistics/data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}